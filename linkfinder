To modify the code to find all links on a webpage (not just scripts) and display them, you can use a similar approach but expand the scope to include all anchor tags (<a>), script tags (<script>), and other elements that might contain URLs. Here's the updated version of your JavaScript code:

javascript

(function(){
    // Regular expression to match URLs
    var regex = /(?<=(\"|\'|\`|\())https?:\/\/[a-zA-Z0-9_?&=\/\-\#\.]*(?=(\"|\'|\`|\)))/g;
    const results = new Set();

    // Function to process the text and add matches to the results set
    function addMatches(text) {
        var matches = text.matchAll(regex);
        for (const match of matches) {
            results.add(match[0]);
        }
    }

    // Fetch and process scripts
    var scripts = document.getElementsByTagName("script");
    for (var i = 0; i < scripts.length; i++) {
        var src = scripts[i].src;
        if (src) {
            fetch(src)
                .then(response => response.text())
                .then(text => addMatches(text))
                .catch(error => console.log("An error occurred: ", error));
        }
    }

    // Fetch and process links from anchor tags
    var links = document.getElementsByTagName("a");
    for (var i = 0; i < links.length; i++) {
        var href = links[i].href;
        if (href) {
            results.add(href);
        }
    }

    // Fetch and process the entire page content
    var pageContent = document.documentElement.outerHTML;
    addMatches(pageContent);

    // Write results to the document after 3 seconds
    function writeResults() {
        results.forEach(function(url) {
            document.write(url + "<br>");
        });
    }

    setTimeout(writeResults, 3000);
})();
